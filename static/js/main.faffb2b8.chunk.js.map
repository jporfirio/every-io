{"version":3,"sources":["components/Button.tsx","components/TaskList/TaskList.tsx","components/TaskList/useTaskList.ts","ChallengeComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledButton","styled","button","_templateObject","_taggedTemplateLiteral","_ref","disabled","_ref2","_ref3","$variant","propToBgColor","_ref4","$padding","propsToPadding","primary","danger","success","compact","default","Button","_ref5","children","variant","padding","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Lane","div","Title","h2","_templateObject2","Body","ul","_templateObject3","Item","li","_templateObject4","Label","span","_templateObject5","NoItems","_templateObject6","TaskList","title","items","onMoveBack","onMoveForward","_jsxs","length","map","item","onClick","initialState","todo","doing","done","actions","reducer","state","action","moveItem","from","to","filter","concat","type","Container","LanesContainer","Form","form","Input","input","ChallengeComponent","newItem","setNewItem","React","useState","dispatch","useReducer","useCallback","useTaskList","onSubmit","e","preventDefault","placeholder","value","onChange","target","required","App","className","style","marginLeft","display","flexDirection","alignItems","href","color","background","borderRadius","rel","width","margin","maxHeight","border","boxSizing","boxShadow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faffb2b8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ntype StyledProps = {\n  $variant: keyof typeof propToBgColor;\n  $padding: keyof typeof propsToPadding;\n};\n\nconst StyledButton = styled.button<StyledProps>`\n  color: white;\n  font-size: 1.5rem;\n  border-radius: 0.5em;\n  border: none;\n\n  cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\n  opacity: ${({ disabled }) => disabled && \"30%\"};\n\n  background-color: ${({ $variant }) => propToBgColor[$variant]};\n  padding: ${({ $padding }) => propsToPadding[$padding]};\n`;\n\nconst propToBgColor = {\n  primary: \"#0066FF\",\n  danger: \"#C20B0B\",\n  success: \"#218D1F\",\n};\n\nconst propsToPadding = {\n  compact: \".25em .5em\",\n  default: \".25em 1em\",\n};\n\ntype Props = {\n  children: React.ReactNode;\n  variant?: StyledProps[\"$variant\"];\n  padding?: StyledProps[\"$padding\"];\n} & React.ComponentProps<\"button\">;\n\nexport default function Button({\n  children,\n  variant = \"primary\",\n  padding = \"default\",\n  ...props\n}: Props) {\n  return (\n    <StyledButton $variant={variant} $padding={padding} {...props}>\n      {children}\n    </StyledButton>\n  );\n}\n","import styled from \"styled-components\";\nimport Button from \"../Button\";\n\ntype Props = {\n  title: string;\n  items: Array<string>;\n  onMoveBack?: (item: string) => void;\n  onMoveForward?: (item: string) => void;\n};\n\nconst Lane = styled.div`\n  flex: 1;\n  box-shadow: 0px 2px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.75em;\n  padding: 1em;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n`;\n\nconst Body = styled.ul`\n  width: 100%;\n  padding-inline-start: 0;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: space-between;\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.25);\n  padding: 2em 0.75em;\n\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Label = styled.span`\n  font-size: 1.5rem;\n  padding-block: 1em;\n  text-wrap: balance;\n`;\n\nconst NoItems = styled.span`\n  opacity: 50%;\n  font-style: italic;\n`;\n\nexport default function TaskList({\n  title,\n  items,\n  onMoveBack,\n  onMoveForward,\n}: Props) {\n  return (\n    <Lane>\n      <Title>{title}</Title>\n\n      <Body>\n        {!items.length && <NoItems>No tasks {title}</NoItems>}\n\n        {items.map((item) => (\n          <Item key={item}>\n            <Button\n              variant=\"danger\"\n              padding=\"compact\"\n              disabled={!onMoveBack}\n              onClick={() => onMoveBack?.(item)}\n            >\n              ←\n            </Button>\n\n            <Label>{item}</Label>\n\n            <Button\n              variant=\"success\"\n              padding=\"compact\"\n              disabled={!onMoveForward}\n              onClick={() => onMoveForward?.(item)}\n            >\n              →\n            </Button>\n          </Item>\n        ))}\n      </Body>\n    </Lane>\n  );\n}\n","import React from \"react\";\n\ntype LaneNames = \"todo\" | \"doing\" | \"done\";\n\nconst initialState: Record<LaneNames, Array<string>> = {\n  todo: [],\n  doing: [],\n  done: [],\n};\n\nconst actions = {\n  NEW_ITEM: \"NEW_ITEM\",\n  TO_DOING: \"TO_DOING\",\n  TO_DONE: \"TO_DONE\",\n  FROM_DOING: \"FROM_DOING\",\n  FROM_DONE: \"FROM_DONE\",\n} as const;\n\nfunction reducer(\n  state: typeof initialState,\n  action: {\n    type: keyof typeof actions;\n    item: string;\n  }\n) {\n  const moveItem = (from: Array<string>, to: Array<string>) => ({\n    from: from.filter((item) => item !== action.item),\n    to: to.concat(action.item),\n  });\n\n  switch (action.type) {\n    case actions.NEW_ITEM:\n      return { ...state, todo: state.todo.concat(action.item) };\n\n    case actions.TO_DOING: {\n      const { from, to } = moveItem(state.todo, state.doing);\n      return { ...state, todo: from, doing: to };\n    }\n\n    case actions.TO_DONE: {\n      const { from, to } = moveItem(state.doing, state.done);\n      return { ...state, doing: from, done: to };\n    }\n\n    case actions.FROM_DOING: {\n      const { from, to } = moveItem(state.doing, state.todo);\n      return { ...state, doing: from, todo: to };\n    }\n\n    case actions.FROM_DONE: {\n      const { from, to } = moveItem(state.done, state.doing);\n      return { ...state, done: from, doing: to };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default function useTaskList() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const dispatchAction = React.useCallback(\n    (type: keyof typeof actions, item: string) => dispatch({ type, item }),\n    [dispatch]\n  );\n\n  return [state, dispatchAction] as const;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"./components/Button\";\nimport TaskList, { useTaskList } from \"./components/TaskList\";\n\nconst Container = styled.div`\n  padding: 2.5em;\n  display: flex;\n  flex-direction: column;\n  gap: 2.5em;\n`;\n\nconst LanesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 2.5em;\n  align-items: stretch;\n  min-height: 50vh;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  gap: 2em;\n`;\n\nconst Input = styled.input`\n  padding-inline: 1em;\n  font-size: 1.5rem;\n  padding-block: 0.5em;\n`;\n\nexport function ChallengeComponent() {\n  const [newItem, setNewItem] = React.useState(\"\");\n  const [state, dispatch] = useTaskList();\n\n  return (\n    <Container>\n      <LanesContainer>\n        <TaskList\n          title=\"To Do\"\n          items={state.todo}\n          onMoveForward={(item) => dispatch(\"TO_DOING\", item)}\n        />\n\n        <TaskList\n          title=\"In Progress\"\n          items={state.doing}\n          onMoveForward={(item) => dispatch(\"TO_DONE\", item)}\n          onMoveBack={(item) => dispatch(\"FROM_DOING\", item)}\n        />\n\n        <TaskList\n          title=\"Done\"\n          items={state.done}\n          onMoveBack={(item) => dispatch(\"FROM_DONE\", item)}\n        />\n      </LanesContainer>\n\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          dispatch(\"NEW_ITEM\", newItem);\n          setNewItem(\"\");\n        }}\n      >\n        <Input\n          placeholder=\"Add Task\"\n          value={newItem}\n          onChange={(e) => setNewItem(e.target.value)}\n          required\n        />\n        <Button>+</Button>\n      </Form>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { ChallengeComponent } from \"./ChallengeComponent\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div\n          style={{\n            marginLeft: 25,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <h1>Welcome To The Every.io Code Challenge.</h1>\n          <div style={{ marginLeft: 50 }}>\n            <a\n              target=\"_blank\"\n              href=\"https://www.figma.com/proto/kd49ArXbBt0vi1kBSLkmC1/Code-Challenge?node-id=1%3A2&scaling=min-zoom&page-id=0%3A1\"\n              style={{\n                color: \"white\",\n                background: \"black\",\n                padding: 8,\n                borderRadius: 4,\n                display: \"inline-block\",\n              }}\n              rel=\"noreferrer\"\n            >\n              Checkout the Prototype\n            </a>\n          </div>\n        </div>\n      </header>\n      <main\n        style={{\n          width: \"calc(100vw - 50px)\",\n          margin: \"0 auto\",\n          maxHeight: \"100%\",\n          background: \"#fcfcfc\",\n          border: \"1px solid #000000\",\n          boxSizing: \"border-box\",\n          boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n          borderRadius: 40,\n        }}\n      >\n        <ChallengeComponent />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}